<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>

    <meta http-equiv="content-type" content="text/html; charset=windows-1252">
  </head>
  <body>
    <p> This section describes the command line usage for both the
      classic GUI, and the new console versions of the YLoader
      application.</p>
    <p> Most command line arguments have corresponding settings in the
      GUI version of YLoader. The ones that do not, are generally used
      to control the runtime behavior of the console version, without
      affecting the downloaded data.</p>
    <p> Both the GUI and console versions accept the same command line
      arguments with some differences as far as the default values for
      missing arguments, or required vs. optional arguments:</p>
    <ul>
      <li>for the GUI version, if an argument is not defined on the
        command line, it will use the corresponding value most recently
        set in either the main application window or Settings dialog.
        The console version has fixed defaults which are used in case
        the corresponding command line argument is not set (for optional
        arguments).</li>
      <li>for the GUI version all command line arguments are optional.
        The console version requires the symbols list file, output path
        and the datasource to be specified on the command line</li>
      <li>each of the two versions have specific settings that are
        ignored by the other, generally settings intended to control the
        application. For example, autostart and autoexit arguments are
        used by the GUI version to allow it to run in unattended mode,
        but are ignored by the console version which runs in unattended
        mode by default.</li>
    </ul>
    <p>The console version will display all activity in the console
      window: current settings, session statistics, session progress (as
      a horizontal progress bar and percentage), each symbol download
      status. In addition, the console version can also save all
      activity to a log file, containing also current settings and all
      downloading activity (or optionally only errors).</p>
    <h3><b><font size="4">Passing arguments</font></b></h3>
    <p>There are two nonexclusive ways to pass startup arguments: </p>
    <ul>
      <li>directly on the command line</li>
      <li>in one or more configuration files.</li>
    </ul>
    <h4><b><font size="4">Passing arguments on the command line</font></b></h4>
    <p> The command line has the general format:</p>
    <p> <b>&lt;executable_name&gt; [-argument1 value1] [-argument2
        value2] [-argument3 value3]... </b></p>
    <p>where <b>&lt;executable_name&gt;</b> is:</p>
    <ul>
      <li><b>yloader.exe</b> for the GUI version </li>
      <li><b>ylodercl.exe</b> for the console version.</li>
    </ul>
    <p> Each argument is specified using a name - either short: one
      letter preceded by "-" (ex: <b>-a</b>), or long: a string
      preceded by "--" (ex: <b>--autostart</b>).</p>
    <p> It is not required that the entire long name be entered, only
      enough characters to uniquely identify the argument. For example <b>--auto</b>
      will trigger an error because the application doesn't know if that
      refers to <b>--autoexit</b> or <b>--autostart</b>. But <b>--autos</b>
      will be accepted as it is unambiguously referring to <b>--autostart.</b></p>
    <p> Most arguments require a value following the argument name. The
      argument name and value must be separated by one or more spaces or
      tabs. The value can can be optionally surrounded by quotes if it
      must contain spaces (for example a path or file name). Some
      arguments do not require a value, and they can be followed
      immediately by another argument name.</p>
    <p> There are several types of values required by the various
      arguments:</p>
    <ul>
      <li><b>path</b>, for example <b>-s</b>: or <b>--symbolsfile. </b>Can

        be any legal path, optionally surrounded by quotes, which is
        necessary if it contains spaces. The character "\" should be
        used to indicate different directories levels. Ex: <b>"c:\my
          symbols\nasdaq\all_nasdaq.txt"</b></li>
      <li><b>boolean</b>, for example <b>-u</b> or <b>--update</b>. A
        boolean value can be true or false. True can be represented by
        the string "<b>true</b>" (or any case combination: <b>True</b>,
        <b>tRuE,</b> etc, with or without surrounding quotes) or by the
        number <b>1. </b>False can be represented by the string <b>"false"

        </b>(again using any combination of lower and upper case:<b>
          False, FALSe, </b>etc<b>., </b>with or without surrounding
        quotes<b>) </b>or by the number <b>0. </b>Any other values
        will trigger an error.</li>
      <li><b>string</b>, for example <b>-h </b>or <b>--datafileheader</b>:
        A string must contain at least one character. An empty string
        surrounded by quotes ("") will be interpreted as a missing value
        and will trigger an error. To include space or tab characters
        surround the string by quotes. A few special characters can be
        represented using an escape sequence:
        <ul>
          <li>new line: <b>\n</b></li>
          <li>tab: <b>\t</b></li>
          <li>quote: <b>\"</b></li>
          <li>backslash: <b>\\</b></li>
        </ul>
        <p>This allows more complex strings to be entered despite the
          the command line or configuration file limitations.</p>
        <p>For example a data file header on two lines can be specified
          as: "<b>data file header line1\ndata file header line2</b>"</p>
      </li>
      <li><b>integer,</b> for example <b>-c</b> or <b>--connections.</b>
        This is represented as a series of decimal digits: ex: <b>-c
          15. </b>Any other character will trigger an error.</li>
      <li><b>floating point, </b>for example <b>-M</b> or <b>--volumemultiplier.

        </b> This is represented by any valid floating point value: <b>15,

          2e2, 15.324534 </b> etc.</li>
    </ul>
    <p> For the GUI version, if an argument is not present on the
      command line, the value of the corresponding option will be loaded
      from the previously saved values. The console version will use
      preset defaults if these arguments are not present on the command
      line (except for the required ones).</p>
    <h4><font size="4"><b>Passing arguments in a </b></font><b><font
          size="4">configuration file</font></b></h4>
    <p>Configuration files can be a more convenient way to pass
      arguments to the application than directly on the command line.
      For example, if the application requires many command line
      parameters with long arguments, the command string can become very
      long and difficult to read and maintain. Or if the YLoader
      arguments are auto generated as part of a larger script run in
      unattended mode.</p>
    <p>To specify a configuration file use the command line argument <b>-C</b>
      or <b>--configfile</b> followed by the configuration file name.
      This argument should only be entered on the command line, although
      if it is present in the configuration file itself, it will simply
      be ignored. This is to avoid the case of an infinite loop, which
      would happen if a configuration file could directly or indirectly
      load itself. </p>
    <p>Multiple configuration files can be specified:</p>
    <div class="sample"><b>-C "config_file1" -C "config_file2"</b></div>
    <p>The configuration file format is:</p>
    <div class="sample"><b>argument_name1=value1<br>
        argument_name2=value2<br>
        argument_name3<br>
        #comment1<br>
        <br>
        #comment2<br>
        ...</b></div>
    <p>As shown above, a configuration file can contain any number of
      argument_name=value pairs, with at most one argument per line.
      Only argument long names without the preceding "--" are allowed in
      the configuration file (see the supported arguments table below
      for a description of long names). Abbreviated argument names are
      accepted as long as they are not ambiguous (ex: <b>con </b>
      which will be interepreted as <b>connections)</b></p>
    <p>Arguments that normally do not require a value (such as
      autostart, autoexit, nodateseparator etc.) can also be set in the
      configuration file, in which case only the argument name will be
      present on the line. Ex:</p>
    <div class="sample"><b>autoexit<br>
        autostart</b></div>
    <p>All argument name and value rules that apply to arguments passed
      on the command line, also apply to arguments passed in
      configuraiton files. For example, values can be surrounded by
      quotes or not, string values can contain escaped characters, etc.</p>
    <p>Lines that start with <b>#, </b>which are generally used for
      descriptinve comments, as well as empty lines, are allowed in
      configuration files, and ignored by YLoader</p>
    <p>Passing arguments in a configuration files has several advantages
      over passing them on the command line:</p>
    <ul>
      <li>configuration files are visually cleaner and clearer than the
        corresponding command line./li&gt; </li>
      <li>comments can be used to enhance clarity</li>
      <li>can contain arguments that are frequently used so they won't
        have to be re-entered each time</li>
      <li>can be easily generated by external scripts in case of
        automated runs.</li>
    </ul>
    <p>This being said, the command line is generally more succinct, as
      it allows short argument names. It is also more convenient when
      just a few arguments need to be specified.</p>
    <p>Users are encouraged to experiment with both methods of passing
      arguments, and even combine them for the right balance required by
      the specific application.</p>
    <h3><b><font size="4">Supported arguments</font></b></h3>
    <p>Note that all arguments names, short and long, are case sensitive
      - for example -s sets the symbols file, while -S sets the data
      sort order within a data file.</p>
    <table class="cmd_line_args" width="100%">
      <tbody>
        <tr>
          <td class="cmd_line_args" width="111" bgcolor="#CCCCCC"><b>Short
              name</b></td>
          <td class="cmd_line_args" width="113" bgcolor="#CCCCCC"><b>Long
              name</b></td>
          <td class="cmd_line_args" width="67" bgcolor="#CCCCCC"><b>Value</b></td>
          <td class="cmd_line_args" width="48" bgcolor="#CCCCCC"><b>GUI</b></td>
          <td class="cmd_line_args" width="57" bgcolor="#CCCCCC"><b>Console</b></td>
          <td class="cmd_line_args" width="1215" bgcolor="#CCCCCC"><b>Description</b></td>
          <td class="cmd_line_args" bgcolor="#CCCCCC"><b>Example</b></td>
        </tr>
        <tr>
          <td id="argument_category" colspan="7" bgcolor="#6699FF"
            align="center"> <font color="#FFFFFF">Application control</font></td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-?</b></td>
          <td class="cmd_line_args" width="113"><b>--help</b></td>
          <td class="cmd_line_args" width="67">&nbsp;</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional</td>
          <td class="cmd_line_args" width="1215">Displays a short
            description of all the command line options</td>
          <td class="cmd_line_args">yloader -? </td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-a</b></td>
          <td class="cmd_line_args" width="113"><b>--autostart</b></td>
          <td class="cmd_line_args" width="67">&nbsp;</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">ignored</td>
          <td class="cmd_line_args" width="1215">If present, this
            argument will automatically start a downloading session</td>
          <td class="cmd_line_args">yloader -a</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-x</b></td>
          <td class="cmd_line_args" width="113"><b>--autoexit</b></td>
          <td class="cmd_line_args" width="67">&nbsp;</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">ignored</td>
          <td class="cmd_line_args" width="1215">Instructs the
            downloader to automatically close after the downloading
            session has completed. It can be used together with argument
            <b>-a </b>to automatically start and end a YLoader session.
            <p>Note: options -a and -x are generally used when YLoader
              is used as part of an automated script. In that case, it
              makes more sense to use the console version of YLoader
              instead of the GUI version.</p>
          </td>
          <td class="cmd_line_args">yloader -a -x</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-o</b></td>
          <td class="cmd_line_args" width="113"><b>--showsettings</b></td>
          <td class="cmd_line_args" width="67">&nbsp;</td>
          <td class="cmd_line_args" width="48">ignored</td>
          <td class="cmd_line_args" width="57">optional (default - don't
            show settings)</td>
          <td class="cmd_line_args" width="1215">Available only in the
            console version. Instructs the downloader to display all
            settings for the session. Used to see the actual values for
            all the settings, even those that have not been set
            explicitly on the command line.</td>
          <td class="cmd_line_args">yloadercl -o</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-N</b></td>
          <td class="cmd_line_args" width="113"><b>--dontrun</b></td>
          <td class="cmd_line_args" width="67">&nbsp;</td>
          <td class="cmd_line_args" width="48">ignored</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - run)</td>
          <td class="cmd_line_args" width="1215">Available only in the
            console version. Instructs the downloader not to run a
            downloading session. Can be used together with -o to check
            the values of various settings before actually starting a
            session.</td>
          <td class="cmd_line_args">yloadercl -o -N</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-R</b></td>
          <td class="cmd_line_args" width="113"><b>--progress</b></td>
          <td class="cmd_line_args" width="67">N (integer)</td>
          <td class="cmd_line_args" width="48">ignored</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - 100)</td>
          <td class="cmd_line_args" width="1215">Available only in the
            console version. Instructs the downloader to display
            progress information every N downloaded symbol if N &gt; 0,
            or no progress information if set to 0</td>
          <td>&nbsp;</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-C</b></td>
          <td class="cmd_line_args" width="113"><b>--configfile</b></td>
          <td class="cmd_line_args" width="67">a file name</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - empty string)</td>
          <td class="cmd_line_args" width="1215">Instructs the
            downloader to load arguments from a configuration file in
            addition to those passed directly on the command line.</td>
          <td class="cmd_line_args">yloader -C "\yloader.cfg"</td>
        </tr>
        <tr>
          <td class="cmd_line_args" id="argument_category" colspan="7"
            bgcolor="#6699FF" align="center"> <font color="#FFFFFF"><span
                style="background-color: #6699FF">Download session
                control</span></font></td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-s</b></td>
          <td class="cmd_line_args" width="113"><b>--symbolsfile</b></td>
          <td class="cmd_line_args" width="67">a string containing the
            symbols file name </td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">required</td>
          <td class="cmd_line_args" width="1215">Sets the name and path
            of the file containing the symbols. The value string must be
            between quotes if it contains spaces</td>
          <td class="cmd_line_args">yloader -s "c:\symbols\nasdaq.txt"</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-d</b></td>
          <td class="cmd_line_args" width="113"><b>--datapath</b></td>
          <td class="cmd_line_args" width="67">a string containing the
            data path</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">required</td>
          <td class="cmd_line_args" width="1215">Sets the path under
            which the generated files will be saved. The value string
            must be between quotes if it contains spaces</td>
          <td class="cmd_line_args">yloader -d "c:\data"</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-n</b></td>
          <td class="cmd_line_args" width="113"><b>--datasource</b></td>
          <td class="cmd_line_args" width="67">a string identifying the
            datasource</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">required</td>
          <td class="cmd_line_args" width="1215">Instructs the
            downloader which datasource to use to download the data. The
            datasource name can be incomplete as long as it uniquely
            identifies it, for example "y", "ya" "go" are all valid
            datasource names. Also, the name is case insensitive, so
            both "y" and "Y" will identify Yahoo as datasource.</td>
          <td class="cmd_line_args">yloader -n "Y"<br>
            yloader -n "yahoo" <br>
            yloader -n "goo" )<br>
            yloader -n "4389DD"
            <p>Note: the last example will set Google as plugin based on
              its id.</p>
          </td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-j</b></td>
          <td class="cmd_line_args" width="113"><b>--adjust</b></td>
          <td class="cmd_line_args" width="67">0 to disable<br>
            1 to enable</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default on)</td>
          <td class="cmd_line_args" width="1215">Instructs the
            downloader whether to adjust data for split and dividends or
            not. Note that some data sources may not support either
            adjusted or unadjusted data.</td>
          <td class="cmd_line_args">yloader -j 1</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-v</b></td>
          <td class="cmd_line_args" width="113"><b>--validateprices</b></td>
          <td class="cmd_line_args" width="67">0 to disable<br>
            1 to enable</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default on)</td>
          <td class="cmd_line_args" width="1215">Instructs the
            downloader whether to check data for errors or not.</td>
          <td class="cmd_line_args">yloader -v 0</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-t</b></td>
          <td class="cmd_line_args" width="113"><b>--startdate</b></td>
          <td class="cmd_line_args" width="67">0 to disable<br>
            1 to enable </td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - earliest date available)</td>
          <td class="cmd_line_args" width="1215">Sets the start date of
            the downloading range. The format is "mm/dd/yyyy" where mm
            is the month (1-12), dd is the day (1-31) and yyyy is the
            year. An empty quoted string can be set to specify the
            earliest available start date. See also -l and -u.</td>
          <td class="cmd_line_args">yloader -t "1/1/2008"<br>
            yloader -t ""</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-e</b></td>
          <td class="cmd_line_args" width="113"><b>--enddate</b></td>
          <td class="cmd_line_args" width="67">0 to disable<br>
            1 to enable</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - most recent date available)</td>
          <td class="cmd_line_args" width="1215">Sets the end date of
            the downloading range. The format is "mm/dd/yyyy" where mm
            is the month (1-12), dd is the day (1-31) and yyyy is the
            year. An empty quoted string can be set to most recent
            available end date. See also -l and -u.</td>
          <td class="cmd_line_args">yloader -e "1/1/2008"<br>
            yloader -e ""</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-l</b></td>
          <td class="cmd_line_args" width="113"><b>--allavailable</b></td>
          <td class="cmd_line_args" width="67">0 to disable<br>
            1 to enable</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - off)</td>
          <td class="cmd_line_args" width="1215">Instructs the
            downloader whether to ignore the start/end date settings and
            download all available data ,if enabled, or use the
            start/end dates if disabled.</td>
          <td class="cmd_line_args">yloader -l 1</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-u</b></td>
          <td class="cmd_line_args" width="113"><b>--update</b></td>
          <td class="cmd_line_args" width="67">0 to disable<br>
            1 to enable</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - off)</td>
          <td class="cmd_line_args" width="1215">Instructs the
            downloader to download only the most recent missing bars if
            enabled, or the data for the entire specified range if
            disabled. Enabling the update mode is the most efficient way
            to download data on an ongoing basis, as this will always
            download the minimum amount of data.
            <p>Note: even in update mode the downloader may decide to
              download all data (according to the specified range) if it
              determines that old data is no longer consistent with the
              new data due to adjustments. See also argument -w</p>
          </td>
          <td class="cmd_line_args">yloader -u 0</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-p</b></td>
          <td class="cmd_line_args" width="113"><b>--period</b></td>
          <td class="cmd_line_args" width="67">0 for daily<br>
            1 for weekly<br>
            2 for monthly</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - daily)</td>
          <td class="cmd_line_args" width="1215">Set the data resolution</td>
          <td class="cmd_line_args">yloader -p 1</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-c</b></td>
          <td class="cmd_line_args" width="113"><b>--connections</b></td>
          <td class="cmd_line_args" width="67">number between 1-20</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - 5)</td>
          <td class="cmd_line_args" width="1215">Sets the number of
            simultaneous downloading connections. If bandwidth and
            processing power were unlimited, the higher the number the
            faster the download. In practice, should be used with
            caution, as a higher number may not necessarily result in a
            faster download</td>
          <td class="cmd_line_args">yloader -c 7</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-i</b></td>
          <td class="cmd_line_args" width="113"><b>--invaliddatahandling</b></td>
          <td class="cmd_line_args" width="67">0 - warning<br>
            1 - error</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - warning)</td>
          <td class="cmd_line_args" width="1215">Instructs the
            downloader to issue an warning and continue downloading the
            data, if set to warning, or issue an error and halt
            downloading the data for that symbol, if set to error.</td>
          <td class="cmd_line_args">yloader -i 1</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-V</b></td>
          <td class="cmd_line_args" width="113"><b>--volume0handling</b></td>
          <td class="cmd_line_args" width="67">0 - handle as valid<br>
            1 - handle as invalid</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - valid)</td>
          <td class="cmd_line_args" width="1215">Instructs the
            downloader how to handle the case of volume 0. If set to
            valid, it will consider volume 0 as a valid value, if set to
            invalid, it will consider volume 0 as invalid, and it will
            handle further according to argument -i (handling of invalid
            data)</td>
          <td class="cmd_line_args">yloader -V 0</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-w</b></td>
          <td class="cmd_line_args" width="113"><b>--noreloadolddata</b></td>
          <td class="cmd_line_args" width="67">0 - allow reloading of
            old data<br>
            1 - don't allow reloading of old data</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - 0)</td>
          <td class="cmd_line_args" width="1215">Instructs the
            downloader to reload old data in update mode, if necessary,
            if set to enable, and disables reloading of old data in
            update mode, even if old data is inconsistent, if disabled.
            See also argument -u.</td>
          <td class="cmd_line_args">yloader -w 1</td>
        </tr>
        <tr>
          <td class="cmd_line_args" id="argument_category" colspan="7"
            bgcolor="#6699FF" align="center"> <font color="#FFFFFF">Settings
              based line formatting</font></td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-f</b></td>
          <td class="cmd_line_args" width="113"><b>--dateformat</b></td>
          <td class="cmd_line_args" width="67">0 for m/d/y<br>
            1 for d/m/y<br>
            2 for y/m/d</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - 0)</td>
          <td class="cmd_line_args" width="1215">Sets the date format
            for the downloaded data.</td>
          <td class="cmd_line_args">yloader -f 1</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-y</b></td>
          <td class="cmd_line_args" width="113"><b>--addsymbol</b></td>
          <td class="cmd_line_args" width="67">0 to disable<br>
            1 to enable</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - off)</td>
          <td class="cmd_line_args" width="1215">Instructs the
            downloader whether to add the symbol to the generated file
            if enabled (see argument -m for the column where the symbol
            will be placed), or to not add the symbol to the generated
            file if disabled.</td>
          <td class="cmd_line_args">yloader -y 1</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-m</b></td>
          <td class="cmd_line_args" width="113"><b>--symbolcolumn</b></td>
          <td class="cmd_line_args" width="67">number between 0-6</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default 0)</td>
          <td class="cmd_line_args" width="1215">If adding the symbol to
            the generated file is enabled (see argument -y), this will
            set the column in which the symbol will be added (0 for the
            first column, 1 for the second, etc, up to 6 for the last
            column)</td>
          <td class="cmd_line_args">yloader -y 1 -m 2</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-r</b></td>
          <td class="cmd_line_args" width="113"><b>--dateseparator</b></td>
          <td class="cmd_line_args" width="67">a string of 1 or more
            characters </td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - "/")</td>
          <td class="cmd_line_args" width="1215">Sets the date separator
            to the specified character or string. To set the "no date
            separator" mode, use command line argument <b>-z</b>. The
            separator string should be surrounded by quotes in case it
            starts with "-", which can cause an ambiguous command line.
            If both <b>-r</b> and <b>-z</b> are present on the command
            line, -z takes precendence, so there won't be a date
            separator</td>
          <td class="cmd_line_args">yloader -r "-"</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-z</b></td>
          <td class="cmd_line_args" width="113"><b>--nodateseparator</b></td>
          <td class="cmd_line_args" width="67">&nbsp;</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional</td>
          <td class="cmd_line_args" width="1215">Sets the "no date
            separator" mode. See command line argument -r for how to set
            any date separator. If both <b>-r</b> and <b>-z</b> are
            present on the command line, <b>-z</b> takes precedence, so
            there won't be a date separator</td>
          <td class="cmd_line_args">yloader -z</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-F</b></td>
          <td class="cmd_line_args" width="113"><b>--fieldseparator</b></td>
          <td class="cmd_line_args" width="67">a string of 1 or more
            characters</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - ",")</td>
          <td class="cmd_line_args" width="1215">Sets the field
            separator to the specified character or string</td>
          <td class="cmd_line_args">yloader -F "+"</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-D</b></td>
          <td class="cmd_line_args" width="113"><b>--paddatefields</b></td>
          <td class="cmd_line_args" width="67">0 to disable<br>
            1 to enable</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - disable)</td>
          <td class="cmd_line_args" width="1215">Instructs the
            downloader whether to pad the date fields with 0s if
            enabled, or to leave the date unchanged if disabled. The
            padding will only affect the day and month fields, if either
            of these only has one digit (ex: 1/1/2010 becomes
            01/01/2010)</td>
          <td class="cmd_line_args">yloader -D 1</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-M</b></td>
          <td class="cmd_line_args" width="113"><b>--volumemultiplier</b></td>
          <td class="cmd_line_args" width="67">positive float</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - 1)</td>
          <td class="cmd_line_args" width="1215">Sets the volume
            multiplier.</td>
          <td class="cmd_line_args">yloader -M 0.1</td>
        </tr>
        <tr>
          <td class="cmd_line_args"><b>-L</b>
          </td>
          <td class="cmd_line_args"><b>-fixeddecimalscount</b>
          </td>
          <td class="cmd_line_args">integer
          </td>
          <td class="cmd_line_args">optional
          </td>
          <td class="cmd_line_args">optional (default -1)
          </td>
          <td class="cmd_line_args">Saves price values with fixed number of
            decimals set by the argument value. If the value has fewer
            decimal digits, value will be padded with zeros up to the
            specified number of digits. Use "-1" for default behavior,
            which is variable number of decimals
          </td>
          <td class="cmd_line_args">yloader -L 2
          </td>
        </tr>
        <tr>
          <td class="cmd_line_args"><b>-U</b>
          </td>
          <td class="cmd_line_args"><b>-decimalseparator</b>
          </td>
          <td class="cmd_line_args">a string of one or more characters
          </td>
          <td class="cmd_line_args">optional
          </td>
          <td class="cmd_line_args">optional (default ".")
          </td>
          <td class="cmd_line_args">Sets the decimal separator character. The
            default is "."
          </td>
          <td class="cmd_line_args">yloader -U ","<br>
          </td>
        </tr>
        <tr>
          <td class="cmd_line_args" id="argument_category" colspan="7"
            bgcolor="#6699FF" align="center"> <font color="#FFFFFF">Regex
              based line formatting</font></td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-O</b></td>
          <td class="cmd_line_args" width="113"><b>--enableregexformatting</b></td>
          <td class="cmd_line_args" width="67">0 to disable<br>
            1 to enable</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional (default -
            disable)</td>
          <td class="cmd_line_args" width="1215">it will enable regular
            expression formatting of output data and will disable
            settings based output data formatting. All other output data
            formatting arguments (such as field separator, date format
            etc) will be ignored. </td>
          <td>&nbsp;</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-Y</b></td>
          <td class="cmd_line_args" width="113"><b>--matchregex</b></td>
          <td class="cmd_line_args" width="67">a string (the regular
            expression)</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - regex to extract all fields)</td>
          <td class="cmd_line_args" width="1215">If set, it will define
            the regular expression used to extract fields from the input
            data. <br>
            See the chapter on regular expression formatting on more
            information</td>
          <td class="cmd_line_args">yloader -O 1 -Y "(.*),(.*)"</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-Z</b></td>
          <td class="cmd_line_args" width="113"><b>--formatstring</b></td>
          <td class="cmd_line_args" width="67">a string describing the
            data format</td>
          <td class="cmd_line_args" width="48">ignored</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - it will leave input data unchanged, if based on
            the default match regex)</td>
          <td class="cmd_line_args" width="1215">If set, it will define
            the format of each line in the output data files. See the
            chapter on regular expression formatting on more information</td>
          <td class="cmd_line_args">yloader -O 1 -Z "$1,$2</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-G</b></td>
          <td class="cmd_line_args" width="113"><b>--regexflags</b></td>
          <td class="cmd_line_args" width="67">an integer</td>
          <td class="cmd_line_args" width="48">ignored</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default 0)</td>
          <td class="cmd_line_args" width="1215">This argument is
            currently not used. In the future it will allow fine tuning
            of the regular expression formatting (the type of
            expression, character case handling etc). See the chapter on
            regular expression formatting on more information</td>
          <td class="cmd_line_args">yloader -O 1 -G 0</td>
        </tr>
        <tr>
          <td class="cmd_line_args" id="argument_category" colspan="7"
            bgcolor="#6699FF" align="center"> <font color="#FFFFFF">Output
              files</font></td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-S</b></td>
          <td class="cmd_line_args" width="113"><b>--sortascending</b></td>
          <td class="cmd_line_args" width="67">0 for descending<br>
            1 for ascending</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - ascending)</td>
          <td class="cmd_line_args" width="1215">Sets the bar sorting
            order in the generated files relative to their date.</td>
          <td class="cmd_line_args">yloader -S 0</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-h</b></td>
          <td class="cmd_line_args" width="113"><b>--datafileheader</b></td>
          <td class="cmd_line_args" width="67">a string of characters</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - empty string)</td>
          <td class="cmd_line_args" width="1215">Instructs the
            downloader to add the string to the top of all data files.
            If the string contains spaces, it should be quoted.
            Currently this string cannot contain special characters such
            as new line etc. To enable a multi-line header string, use
            the Settings/Formatting/Data File Header when using the GUI
            version of the downloader.</td>
          <td class="cmd_line_args">yloader -h "This is a header string"</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-P</b></td>
          <td class="cmd_line_args" width="113"><b>--prependtofilename</b></td>
          <td class="cmd_line_args" width="67">a string of characters</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - empty string)</td>
          <td class="cmd_line_args" width="1215">Instructs the
            downloader to add the specified string to the beginning of
            the file name for each symbol. If the strings contains
            spaces, it should be quoted. The string cannot contain
            characters that are invalid in file names, such as <i>?, *,
              "</i></td>
          <td class="cmd_line_args">yloader -P "data"</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-A</b></td>
          <td class="cmd_line_args" width="113"><b>--appendtofilename</b></td>
          <td class="cmd_line_args" width="67">a string of characters</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - empty string)</td>
          <td class="cmd_line_args" width="1215">Instructs the
            downloader to add the specified string to the end of the
            file name (before the extension) for each symbol. If the
            strings contains spaces, it should be quoted. The string
            cannot contain characters that are invalid in file names,
            such as <i>?, *, "</i></td>
          <td class="cmd_line_args">yloader -A "data"</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-X</b></td>
          <td class="cmd_line_args" width="113"><b>--extension</b></td>
          <td class="cmd_line_args" width="67">a string of characters</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - "csv")</td>
          <td class="cmd_line_args" width="1215">Instructs the
            downloader to use the specified string as the file
            extension. If the strings contains spaces, it should be
            quoted. The string cannot contain characters that are
            invalid in file names, such as <i>?, *, "</i></td>
          <td class="cmd_line_args">yloader -X "txt"</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-b</b></td>
          <td class="cmd_line_args" width="113"><b>--singleoutputfile</b></td>
          <td class="cmd_line_args" width="67">a file name</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - empty string)</td>
          <td class="cmd_line_args" width="1215">Instructs the
            downloader to save all the downloaded data to a single file
            with the specified name. Files for individual symbols will
            still be generated. If the strings contains spaces, it
            should be quoted. The string cannot contain characters that
            are invalid in file names, such as <i>?, *, "</i> </td>
          <td class="cmd_line_args">yloader -b "c:\allsymbolsfile.csv"</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-k</b></td>
          <td class="cmd_line_args" width="113"><b>--nosingleoutputfile</b></td>
          <td class="cmd_line_args" width="67">&nbsp;</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">not used</td>
          <td class="cmd_line_args" width="1215">Instructs the
            downloader to clear the single output file name field, thus
            disabling the single output file generation feature for the
            current session (used only in the GUI version).</td>
          <td class="cmd_line_args">yloader -k</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-q</b></td>
          <td class="cmd_line_args" width="113"><b>--createsubdirs</b></td>
          <td class="cmd_line_args" width="67">0 - disable<br>
            1 - enable</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - 0)</td>
          <td class="cmd_line_args" width="1215">Instructs the
            downloader to save the data files under a hierarchy of
            nested folders (using the first two characters of each
            symbol) if enabled, or to save the output files in a flat
            structure, if disabled. The output data path set with -d is
            used as root in both cases.</td>
          <td class="cmd_line_args">yloader -q 1</td>
        </tr>
        <tr>
          <td class="cmd_line_args" valign="middle"><b>-K</b><br>
          </td>
          <td class="cmd_line_args" valign="middle"><b>--mapcharacter</b><br>
          </td>
          <td class="cmd_line_args" valign="middle">a string of one or
            two characters<br>
          </td>
          <td class="cmd_line_args" valign="middle">optional<br>
          </td>
          <td class="cmd_line_args" valign="middle">optional<br>
          </td>
          <td class="cmd_line_args" valign="middle">Maps one character
            in the symbol name to one character in the data file for
            that symbol. There can be up to four mappings. The main
            purpose of this argument is to allow saving data for symbols
            that contain characters that are invalid in file names, such
            as ":" etc.<br>
            <ul>
              <li>If the string contains one character, it will be
                removed from the data file name, e.g. for symbol "ry:ca"
                and mapping ":", the data file name will be "ryca" (the
                ":" will be removed).</li>
              <li>If the string contains two characters, the first
                character in the symbol name will be mapped to the
                second character in the data file name. e.g. for symbol
                "ry:ca" and mapping ":_", the data file name will be
                "ry_ca".<br>
              </li>
            </ul>
          </td>
          <td class="cmd_line_args" valign="middle">yloader -K ":_"<br>
            yloader -K ":"<br>
          </td>
        </tr>
        <tr>
          <td class="cmd_line_args" id="argument_category" colspan="7"
            bgcolor="#6699FF" align="center"> <font color="#FFFFFF">Extra
              Symbols Lists</font></td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-B</b></td>
          <td class="cmd_line_args" width="113"><b>--errorsymbolsfilename</b></td>
          <td class="cmd_line_args" width="67">error symbols list file
            name</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - no error symbols file name)</td>
          <td class="cmd_line_args" width="1215">Sets the error symbols
            list file name. If set, it will save all symbols with errors
            during the current session into this file, otherwise will
            not save the these symbols. Can be used together with
            arguments -H and -I for more control over how to save and
            use the error symbols file.</td>
          <td class="cmd_line_args">yloader -B ""\errors.txt""</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-H</b></td>
          <td class="cmd_line_args" width="113"><b>--appendtoerrorsymbolslist</b></td>
          <td class="cmd_line_args" width="67">0 - do not append to
            error symbols file<br>
            1 - append to error symbols file</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - 1</td>
          <td class="cmd_line_args" width="1215">Instructs the
            downloader to append new error symbols to the existing error
            symbols file (if any), if set to 1, or to create a new error
            symbols file after each session if set to 0. Can be used
            together with arguments -B and -I for more control over how
            to save and use the error symbols file.</td>
          <td class="cmd_line_args">yloader -H "0"</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-I</b></td>
          <td class="cmd_line_args" width="113"><b>--ignoreerrorsymbolslist</b></td>
          <td class="cmd_line_args" width="67">0 - do not ignore symbols
            in error symbols list<br>
            1 - ignore symbols in error symbols list</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - 1</td>
          <td class="cmd_line_args" width="1215">Instructs the
            downloader to ignore symbols that appear in the error
            symbols list file (if any), during a downloading session, ,
            even if they appear in the main list of symbols to download,
            if set to 1, or to not ignore these symbols if set to 0. Can
            be used together with arguments -B and -H for more control
            over how to save and use the error symbols file.</td>
          <td class="cmd_line_args">yloader -I "1"</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-J</b></td>
          <td class="cmd_line_args" width="113"><b>--ignoresymbolslist</b></td>
          <td class="cmd_line_args" width="67">file name containing
            symbols to be ignored<br>
            no file name</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - 1</td>
          <td class="cmd_line_args" width="1215">If set to the name of a
            file containing a list of symbols, these symbols will be
            ignored during a downloading session even if they appear in
            the main list of symbols to download. This file can be used
            in addition to the automatically generated error symbols
            list file to further control what is and what is not
            downloaded.</td>
          <td class="cmd_line_args">yloader -J "\exclude_symbols.txt"</td>
        </tr>
        <tr>
          <td class="cmd_line_args" id="argument_category" colspan="7"
            bgcolor="#6699FF" align="center"> <font color="#FFFFFF">Log
              file</font></td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-g</b></td>
          <td class="cmd_line_args" width="113"><b>--logfile</b></td>
          <td class="cmd_line_args" width="67">a file name</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - no log file name)</td>
          <td class="cmd_line_args" width="1215">Sets the the log file
            name. If set, it will save the current session activity log
            with this name, otherwise will not save the activity log.
            Can be used together with argument -z for more control over
            how to save the log file.</td>
          <td class="cmd_line_args">yloader -g "\yloader.log"</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-E</b></td>
          <td class="cmd_line_args" width="113"><b>--logonlyerrors</b></td>
          <td class="cmd_line_args" width="67">0 - log all events<br>
            1 - log only error events</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - log everything)</td>
          <td class="cmd_line_args" width="1215">Instructs the
            downloader to only log error events during a downloading
            session</td>
          <td class="cmd_line_args">yloader -E 1</td>
        </tr>
        <tr>
          <td class="cmd_line_args" width="111"><b>-T</b></td>
          <td class="cmd_line_args" width="113"><b>--appendtolog</b></td>
          <td class="cmd_line_args" width="67">0 - reset the log file<br>
            1 - append to the log file</td>
          <td class="cmd_line_args" width="48">optional</td>
          <td class="cmd_line_args" width="57">optional<br>
            (default - 0)</td>
          <td class="cmd_line_args" width="1215">Instructs the
            downloader to append log statements for new sessions to the
            existing log file if set to 1, or to reset the log file
            every time a new session starts. </td>
          <td class="cmd_line_args">yloader -z 1</td>
        </tr>
      </tbody>
    </table>
    <h3> Examples</h3>
    <p> <b>1. autostart and/or autoexit YLoader</b></p>
    <div class="sample"> yloader.exe --autoexitt<br>
      yloader.exe -x<br>
      yloader.exe -x -a </div>
    <p><span style="font-weight: 700">2. Set the required arguments for
        the console version, using long argument names</span></p>
    <div class="sample"> yloadercl.exe --symbolsfile "c:\symbols
      files\nasdaq.txt" --datapath "c:\data" --datasource "yahoo" </div>
    <p><span style="font-weight: 400"><b>3. Set several options (adjust
          off, all available off, update on, validate prices off, data
          source Google)and auto-start a downloading session.</b></span></p>
    <div class="sample">yloader.exe -j 0 -l 0 -u 1 -v 0 -o 1 -a</div>
    <p><span style="font-weight: 400"><b>4. Set several options in a
          configuration file</b></span></p>
    <div class="sample">yloadercl.exe -C "\yloaderconfig.txt"</div>
    where the configuration file "yloaderconfig.txt" contains:
    <div class="sample"> symbolsfile="c:\symbols files\nasdaq.txt"<br>
      datapath="c:\data"<br>
      datasource="yahoo" </div>
    <p><span style="font-weight: 400"><b>5. Display the current
          settings, including the defaults for missing arguments and
          exit (console version only).</b></span></p>
    <div class="sample">yloadercl.exe -o -N &lt;required arguments&gt;</div>
    <p>Note: <b>-o</b> will display current settings, <b>-N</b> will
      stop the application before the downloading stats. &lt;required
      arguments&gt; indicates that arguments that are needed to run the
      application (such as data path, symbols file, data source) must
      still be passed or an error will be triggered before the value of
      all arguments is displayed.</p>
    <p><span style="font-weight: 400"><b>6. Run a console session for
          data within a defined range</b></span></p>
    <div class="sample">yloadercl -d \data -s "\symbols.txt" -n "yahoo"
      -t 7/7/2010 -e 10/25/2010</div>
    <p><span style="font-weight: 400"><b>7. Run a console session </b></span><b>in

        update mode (download only most recent bars if possible)</b></p>
    <div class="sample">yloadercl -d \data -s "\symbols.txt" -n "y" -u 1</div>
    <p>Note: -n "y" will instruct YLoader to use Yahoo as data source (a
      few characters of the datasource name are enough to identify it)</p>
  </body>
</html>
